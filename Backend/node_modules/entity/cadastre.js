/*
 *    Date: 2019 09 03
 *  Author: Giuseppe Falcone
 * Project: Nodas - EntityManager
 *
 * Copyright 2019 SIT srl
 */

var entTemp = require(process.cwd()+"/../lib/entityTemplate").entityTemplate;
var util = require("util");
var self = {};

var cadastre = function()
{
  cadastre.super_.call(this);

  this.moduleName = "Entity cadastre";
  this.entityName = "cadastre";
  this.schemaName = "catasto";
}

/*
 * Inheritance
 */
util.inherits(cadastre,entTemp);

cadastre.prototype.init = function(opt)
{
  self = this;
  cadastre.super_.prototype.init.call(self,opt);
}

/*
 * New methods
 */
cadastre.prototype.retrieveParcelData = function(opt,callback)
{
  if (!opt.id)
  {
    var msg = "Missing id from request"
    self.log.error(self.moduleName + " - " + msg);
    callback({message:msg},null);
  }

  /*
   * Query to execute:
   * (retrieve parcel data given parcel id)
   *
   * SELECT codice_comune, sezione, foglio, numero, allegato
   * FROM catasto.view_catasto_particelle
   * WHERE gid = $1
   *
   */

  var qOpt = {
    fields:[
      {name:'codice_comune'},
      {name:'sezione'},
      {name:'foglio'},
      {name:'numero'},
      {name:'allegato'}
    ],
    from:[
      {schema:'catasto', name:'view_catasto_particelle', type:self.crudUtils.TABLE}
    ],
    where:[
      {
        typeCond: self.crudUtils.SIMPLE_COND,
        leftSide: 'gid',
        operator: self.crudUtils.EQ,
        rightSide: '$1'
      }
    ]
  };

  self.crud.select(qOpt, [{value:opt.id}], function(err, res)
  {
    if (err || !res || res.result.length != 1)
    {
      var msg = "Error on retrieve cadastral data for id " + opt.id;

      self.log.error(self.moduleName + " - " + msg + ": " + err.message);

      callback({message:msg}, null);
    }

    callback(null, res.result[0]);
  });
}

/*
 * Export
 */
exports.cadastre = cadastre;

/*
 * Private functions
 */
