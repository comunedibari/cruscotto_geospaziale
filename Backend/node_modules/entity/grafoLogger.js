/*
 *    Date: 2019 06 12
 * Project: Nodas - EntityManager
 *
 * Copyright 2019 SIT srl
 */

var entTemp = require(process.cwd()+"/../lib/entityTemplate").entityTemplate;
var util = require("util");

var grafoLogger = function()
{
  grafoLogger.super_.call(this);
}

/*
 * Inheritance
 */
util.inherits(grafoLogger,entTemp);

/*
 * Reimplemented method
 */
grafoLogger.prototype.insert = function(opt,callback)
{
  var self = this;

  grafoLogger.super_.prototype.insert.call(self,opt,function(err,res)
  {
    if (err)
    {
      callback(err,null);
      return;
    }

    /* Prepare change */
    var change = [];

    for (var key in opt.object)
      change.push({key:key, new:opt.object[key], old:null});

    /* Add log entry */
    var logOpt = {
      transName: opt.transName,
      object: {
        user_id: opt.sysuser_id,
        entity: self.entityName,
        entity_id: res.result[self.entityId],
        operation: opt.operation || "Inserimento",
        change: change
      }
    };

    self.entityHolder.getEntity("grafoLog").insert(logOpt,function(lErr,lRes)
    {
      callback(lErr,lErr ? null : res);
    });
  });
}

grafoLogger.prototype.update = function(opt,callback)
{
  var self = this;
  opt.retOldVal = true;

  grafoLogger.super_.prototype.update.call(self,opt,function(err,res)
  {
    if (err)
    {
      callback(err,null);
      return;
    }

    /* Prepare change */
    var change = [];

    for (var key in opt.object)
      change.push({key:key, new:opt.object[key], old:res.result[key]});

    /* Add log entry */
    var logOpt = {
      transName: opt.transName,
      object: {
        user_id: opt.sysuser_id,
        entity: self.entityName,
        entity_id: opt.id,
        operation: opt.operation || "Aggiornamento",
        change: change
      }
    };

    self.entityHolder.getEntity("grafoLog").insert(logOpt,function(lErr,lRes)
    {
      callback(lErr,lErr ? null : {result: {[self.entityId]:opt.id}});
    });
  });
}

/*
 * Export
 */
exports.grafoLogger = grafoLogger;
